image: registry.windmaker.net:5005/a-castellano/limani/base_golang_1_17:202112131727

stages:
    - unit_tests
    - integration_tests
    - coverage
    - report
    - scan
    - build

unit_tests:
  stage: unit_tests
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
    - cd $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
  script:
    - echo $GOPATH
    - pwd
    - make test

race_detector:
  stage: unit_tests
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
    - cd $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
  script:
    - make race

memory_sanitizer:
  stage: unit_tests
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
    - cd $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
  script:
    - make msan

lint_code:
  stage: unit_tests
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
    - cd $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
  script:
    - make lint

integration_tests:
  stage: integration_tests
  services:
    - name: registry.windmaker.net:5005/a-castellano/limani/base_rabbitmq_server:202112131727
      alias: rabbitmq
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
    - cd $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
  script:
    - make test_integration

coverage:
  stage: coverage
  services:
    - name: registry.windmaker.net:5005/a-castellano/limani/base_rabbitmq_server:202112131727
      alias: rabbitmq
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
    - cd $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
  script:
    - make coverage
  coverage: /total:\s+.+\s(\d+\.\d+?)%$/
  artifacts:
    name: "coverage-$CI_PIPELINE_ID"
    paths:
      - cover
    expire_in: 1 hour

code_coverage_report:
  stage: report
  services:
    - name: registry.windmaker.net:5005/a-castellano/limani/base_rabbitmq_server:202112131727
      alias: rabbitmq
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
    - cd $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
  script:
    - make coverhtml
  only:
  - master
  dependencies:
  - coverage
  artifacts:
    name: "coverage-$CI_PIPELINE_ID"
    paths:
      - coverage.html
      - cover
    expire_in: 1 hour

scan:
  stage: scan
  image: daedalusproject/base_sonar_scanner
  script:
  - sonar-scanner -Dsonar.projectKey=webcam-snapshot-worker -Dsonar.sources=. -Dsonar.host.url=https://sonarqube.windmaker.net -Dsonar.login=${SONAR_LOGIN} -Dsonar.exclusions="*/*_test.go" -Dsonar.go.coverage.reportPaths="cover/coverage.report"
  dependencies:
  - coverage


build_package:
  stage: build
  image: registry.windmaker.net:5005/a-castellano/limani/base_deb_golang_1_17_builder:202112131727
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
    - cd $GOPATH/src/github.com/a-castellano/webcam-snapshot-worker
  script:
    - make build
    - cp changelog.yml changelog.yaml
    - nfpm package --packager deb
    - mkdir deb_package
    - mv *.deb deb_package/
  dependencies:
    - coverage
  artifacts:
    name: "coverage-$CI_PIPELINE_ID"
    paths:
      - deb_package
    expire_in: 1 hour
